apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'
apply plugin: 'build-time-tracker'


android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.neeplayer"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    packagingOptions {
        exclude 'META-INF/**.kotlin_module'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation "androidx.media:media:1.1.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "com.google.android.material:material:1.0.0"

    def glideVersion = "4.10.0"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    implementation "com.pushtorefresh.storio:content-resolver:1.8.0"

    def daggerVersion = "2.24"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"

    implementation "com.jakewharton.timber:timber:4.7.1"

    def ktorVersion = "1.2.5"
    implementation "io.ktor:ktor-client-android:$ktorVersion"
    implementation "io.ktor:ktor-client-logging-jvm:$ktorVersion"
    implementation "io.ktor:ktor-client-serialization-jvm:$ktorVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.13.0"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.1'
}

androidExtensions {
    experimental = true
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += "-Xuse-experimental=kotlin.Experimental"
        freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"
        freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.FlowPreview"
    }
}

buildtimetracker {
    reporters {
        summary {
            threshold 1000
            shortenTaskNames false
        }
    }
}

